stages:
  - build-angular
  - üìñ storybook-test
  - üî® docker-build
  - üê£ deploy
  - test-e2e

variables:
  DO_BUILD:
    description: "Activation du build de base des projets (build + TU) : true | if_changed | manual"
    value: "true"
  DO_TEST:
    description: "Activation des tests unitaires : true | manual"
    value: "manual"
  DO_DEPLOY:
    description: "Activation du d√©ploiement des images cr√©es: manual_if_changed | manual"
    value: "manual"
  DO_E2E:
    description: "Activation des tests end-to-end: true | manual"
    value: "manual"

workflow:
  rules:
    # D√©sactive les pipelines sur cr√©ation de branche
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BEFORE_SHA == "0000000000000000000000000000000000000000"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "push" && ($CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop" )'
      variables:
        DO_BUILD: "true"
        DO_TEST: "true"
        DO_DEPLOY: "true"
        DO_E2E: "true"
    - if: '$CI_PIPELINE_SOURCE == "push" &&  $CI_COMMIT_REF_NAME =~ "/^feature\//"'
      variables:
        DO_BUILD: "true"
        DO_TEST: "manual"
        DO_DEPLOY: "manual"
        DO_E2E: "manual"
    - if: '$CI_PIPELINE_SOURCE == "push" &&  $CI_COMMIT_REF_NAME =~ "/^fix\//"'
      variables:
        DO_BUILD: "true"
        DO_TEST: "manual"
        DO_DEPLOY: "manual"
        DO_E2E: "true"
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

.build-docker:
  image: docker:stable-dind
  stage: üî® docker-build
  variables:
    IMAGE: ""
    DOCKERFILE: ""
  script:
    - echo $IMAGE
    - echo $CI_COMMIT_TAG
    - >
      if [[ "$CI_COMMIT_TAG" == "" ]]; then
        echo "TAG VIDE";
        IMAGE_BUILD=${IMAGE}/${CI_COMMIT_REF_NAME};
        VERSION_IMAGE=${CI_COMMIT_SHA:0:8}-snapshot;
      else
        echo "TAG PAS VIDE";
        IMAGE_BUILD=${IMAGE};
        VERSION_IMAGE=${CI_COMMIT_REF_NAME};
      fi
    - echo ${VERSION_IMAGE}
    - echo ${IMAGE_BUILD}
    - docker build -f ${DOCKERFILE} -t ${IMAGE_BUILD} .
    - echo ${REGISTRY_PASSWORD} | docker login ${REGISTRY} -u ${REGISTRY_USER} --password-stdin
    - docker tag ${IMAGE_BUILD} ${IMAGE_BUILD}:${VERSION_IMAGE}
    - echo "push ${IMAGE_BUILD}:${VERSION_IMAGE}" && docker push ${IMAGE_BUILD}:${VERSION_IMAGE}

#BUILD APP
build angular financial data app:
  image: node:16
  stage: build-angular
  script:
    - npm ci --cache ${CI_PROJECT_DIR}/.npm --prefer-offline --quiet --force
    - npm run lint
    - npm run build:financial-data
  cache:
    key: ${CI_PROJECT_ID}-npm
    paths:
      - ${CI_PROJECT_DIR}/.npm/
  artifacts:
    expire_in: 15 mins
    paths:
      - dist/
  rules:
    - if: '$DO_BUILD == "true"'
    - if: '$DO_BUILD == "manual"'
      when: manual
    - if: '$DO_BUILD == "if_changed"'
      changes:
        - "apps/financial-data/**/*"

build angular francerelance app:
  image: node:16
  stage: build-angular
  script:
    - npm ci --cache ${CI_PROJECT_DIR}/.npm --prefer-offline --quiet --force
    - npm run lint
    - npm run build:france-relance
  cache:
    key: ${CI_PROJECT_ID}-npm
    paths:
      - ${CI_PROJECT_DIR}/.npm/
  artifacts:
    expire_in: 15 mins
    paths:
      - dist/
  rules:
    - if: '$DO_BUILD == "true"'
    - if: '$DO_BUILD == "manual"'
      when: manual
    - if: '$DO_BUILD == "if_changed"'
      changes:
        - "apps/france-relance/**/*"

# 
run-storybook-test:
  image: mcr.microsoft.com/playwright:v1.29.2-focal
  stage: üìñ storybook-test
  script:
    - npm ci --cache ${CI_PROJECT_DIR}/.npm --prefer-offline --quiet --force
    - npm i concurrently wait-on http-server
    - npx playwright install --with-deps
    - npx ng run common-lib:build-storybook
    - npx concurrently -k -s first \
        "npx http-server dist/storybook/common-lib --port 6006 --silent" \
        "npx wait-on tcp:6006 && npm run test-storybook"
  cache:
    key: ${CI_PROJECT_ID}-npm
    paths:
      - ${CI_PROJECT_DIR}/.npm/
  rules:
    - if: '$DO_TEST == "true"'
    - if: '$DO_TEST == "manual"'
      when: manual

#BUILD DOCKER
docker-image-financial:
  extends: .build-docker
  variables:
    IMAGE: "${REGISTRY}nocode/financial-data"
    DOCKERFILE: "apps/financial-data/Dockerfile"
  needs:
    - job: build angular financial data app
  rules:
    - if: '$DO_BUILD == "true"'
    - if: '$CI_COMMIT_TAG == ""'
    - if: '$DO_DEPLOY == "manual"'
      when: manual
    - if: '$DO_DEPLOY == "if_changed"'
      changes:
        - "apps/financial-data/**/*"

docker-image-francerelance:
  extends: .build-docker
  variables:
    IMAGE: "${REGISTRY}nocode/france-relance"
    DOCKERFILE: "apps/france-relance/Dockerfile"
  needs:
    - job: build angular francerelance app
  rules:
    - if: '$DO_BUILD == "true"'
    - if: '$CI_COMMIT_TAG == ""'
    - if: '$DO_DEPLOY == "manual"'
      when: manual
    - if: '$DO_DEPLOY == "if_changed"'
      changes:
        - "apps/france-relance/**/*"

# DEPLOY
.deploy-integ:
  stage: üê£ deploy
  variables:
    COMPOSE: ""
    SERVICE: ""
  script:
    - echo ${VERSION}
    - ssh ${USER_INTEG}@${SERVER_INTEG} "docker network create -d overlay --attachable app_network || true"
    - ssh ${USER_INTEG}@${SERVER_INTEG} "export VERSION=${VERSION};"'export $(cat ~/stack-nocode/livraison/env-file-integ);docker stack deploy --with-registry-auth --compose-file '" ${COMPOSE} ${STACK_NAME}"
    - ssh ${USER_INTEG}@${SERVER_INTEG} "docker run --rm -v /var/run/docker.sock:/var/run/docker.sock sudobmitch/docker-stack-wait -n ${SERVICE} ${STACK_NAME}"
#INTEG
deploy-integ-financial-tag:
  extends: .deploy-integ
  needs:
    - job: docker-image-financial
  only:
    - tags
  variables:
    COMPOSE: "~/stack-nocode/compose/integ/front-financial.yml"
    SERVICE: "financial-data"
  before_script:
    - export VERSION=":${CI_COMMIT_REF_NAME}"

deploy-integ-financial-snapshot:
  extends: .deploy-integ
  variables:
    COMPOSE: "~/stack-nocode/compose/integ/front-financial.yml"
    SERVICE: "financial-data"
  before_script:
    - export VERSION="/${CI_COMMIT_REF_NAME}:${CI_COMMIT_SHA:0:8}-snapshot"
  needs:
    - job: docker-image-financial
  rules:
    - if: '$DO_DEPLOY == "true"'
    - if: '$CI_COMMIT_TAG != ""'
      when: never
    - if: '$DO_DEPLOY == "manual"'
      when: manual
    - if: '$DO_DEPLOY == "if_changed"'
      changes:
        - "apps/financial-data/**/*"

deploy-integ-francerelance-tag:
  extends: .deploy-integ
  needs:
    - job: docker-image-francerelance
  only:
    - tags
  variables:
    COMPOSE: "~/stack-nocode/compose/integ/front-france-relance.yml"
    SERVICE: "france-relance"
  before_script:
    - export VERSION=":${CI_COMMIT_REF_NAME}"

deploy-integ-francerelance-snapshot:
  extends: .deploy-integ
  variables:
    COMPOSE: "~/stack-nocode/compose/integ/front-france-relance.yml"
    SERVICE: "france-relance"
  before_script:
    - export VERSION="/${CI_COMMIT_REF_NAME}:${CI_COMMIT_SHA:0:8}-snapshot"
  needs:
    - job: docker-image-francerelance
  rules:
    - if: '$DO_DEPLOY == "true"'
    - if: '$CI_COMMIT_TAG != ""'
      when: never
    - if: '$DO_DEPLOY == "manual"'
      when: manual
    - if: '$DO_DEPLOY == "if_changed"'
      changes:
        - "apps/france-relance/**/*"

#TESTS E2E
run-tests-e2e:
  stage: test-e2e
  image: mcr.microsoft.com/playwright:v1.29.2-focal
  script:
    - cd e2e/
    - npm ci
    - export TEST_USERNAME=${TEST_USERNAME}
    - export TEST_PASSWORD=${TEST_PASSWORD}
    - export TEST_USERNAME_ADMIN=${TEST_USERNAME_ADMIN}
    - export TEST_PASSWORD_ADMIN=${TEST_PASSWORD_ADMIN}
    - npx playwright test
  artifacts:
    expire_in: 3 days
    when: always
    paths:
      - e2e/playwright-report/*
      - e2e/test-results/*
      - test-results/*
      - playwright-report/*
  rules:
    - if: '$DO_E2E == "true"'
    - if: '$DO_E2E == "manual"'
      when: manual
    - if: '$DO_E2E == "if_changed"'
      changes:
        - "apps/e2e/**/*"
